[package]
name = "gauntlet-plugin-runtime"
version = "0.1.0"
edition.workspace = true

[dependencies]
# workspaces
gauntlet-common.workspace = true
gauntlet-component-model.workspace = true
gauntlet-utils.workspace = true
gauntlet-utils-macros.workspace = true
gauntlet-common-plugin-runtime.workspace = true

# shared
anyhow.workspace = true
thiserror.workspace = true
tracing.workspace = true
tokio.workspace = true
tokio-util.workspace = true
serde.workspace = true
bincode.workspace = true
indexmap.workspace = true
regex.workspace = true
futures.workspace = true
image.workspace = true
once_cell.workspace = true
bytes.workspace = true
walkdir.workspace = true
typed-path.workspace = true
interprocess.workspace = true
x11rb.workspace = true

# deno crates
deno_core = { version = "=0.347.0" } # https://github.com/denoland/deno/blob/v2.3.3
deno_runtime = { version = "=0.213.0", features = ["transpile"] }
deno_error = "=0.5.6"
deno_resolver = "=0.36.0"
sys_traits = "*"

# other
resvg = { version = "0.44.0", default-features = false }
numbat = "1.14.0"
which = "7.0.1"
uuid = "1.11.0"
open = "5"
sys-locale = "0.3.2"

[target.'cfg(target_os = "linux")'.dependencies]
freedesktop_entry_parser = "1.3"
freedesktop-icons = "0.2"
wayland-protocols-wlr = { version = "0.3.5", features = ["client"] }
cosmic-protocols = { git = "https://github.com/pop-os/cosmic-protocols.git" }
wayland-client = "0.31.7"
smithay-client-toolkit.workspace = true
encoding = "0.2"

[target.'cfg(target_os = "macos")'.dependencies]
cacao = "0.3.2"
plist = "1.7.0"
icns = "0.3.1"
objc2-app-kit.workspace = true
objc2-foundation.workspace = true
objc2.workspace = true

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.58.0", features = ["Win32_Storage_FileSystem", "Win32_UI_WindowsAndMessaging", "Win32_UI_Shell", "Win32_UI_Controls"] }

[target.'cfg(any(target_os = "linux", target_os = "macos"))'.dependencies]
libc = "0.2"

[features]
scenario_runner = []
release = []

